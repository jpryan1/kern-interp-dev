package(default_visibility = ["//visibility:public"])

cc_binary(
  name = "experiment_one",
  srcs = ["experiment_one.cpp"],
  copts= ["-fopenmp",
          "-std=c++14"],
  deps = [
      "//kern_interp:ki_mat",
      "//kern_interp/skel_factorization",
      "//kern_interp/quadtree",
      "//kern_interp/boundaries",
      "//kern_interp:linear_solve",
      ],
  linkopts = ["-llapacke",
        "-llapack",
        "-lblas",
        "-lgomp"]

)


cc_binary(
  name = "spiral_channel",
  srcs = ["spiral_channel.cpp"],
  copts= ["-fopenmp",
          "-std=c++14"],
  deps = [
      "//kern_interp:ki_mat",
      "//kern_interp/skel_factorization",
      "//kern_interp/quadtree",
      "//kern_interp/boundaries",
      "//kern_interp:linear_solve",
      ],
  linkopts = ["-llapacke",
        "-llapack",
        "-lblas",
        "-lgomp"]

)


cc_binary(
  name = "xrr_test",
  srcs = ["xrr_test.cpp"],
  copts= ["-fopenmp",
          "-std=c++14"],
  deps = [
      "//kern_interp:ki_mat",
      "//kern_interp/skel_factorization",
      "//kern_interp/quadtree",
      "//kern_interp/boundaries",
      "//kern_interp:linear_solve",
      ],
  linkopts = ["-llapacke",
        "-llapack",
        "-lblas",
        "-lgomp"]

)


cc_binary(
  name = "experiment_two",
  srcs = ["experiment_two.cpp"],
  copts= ["-fopenmp",
          "-std=c++14"],
  deps = [
      "//kern_interp:ki_mat",
      "//kern_interp/skel_factorization",
      "//kern_interp/quadtree",
      "//kern_interp/boundaries",
      "//kern_interp:linear_solve",
      ],
  linkopts = ["-llapacke",
        "-llapack",
        "-lblas",
        "-lgomp"]

)


cc_binary(
  name = "experiment_three",
  srcs = ["experiment_three.cpp"],
  copts= ["-fopenmp",
          "-std=c++14"],
  deps = [
      "//kern_interp:ki_mat",
      "//kern_interp/skel_factorization",
      "//kern_interp/quadtree",
      "//kern_interp/boundaries",
      "//kern_interp:linear_solve",
      ],
 linkopts = ["-llapacke",
        "-llapack",
        "-lblas",
        "-lgomp"]

)

cc_binary(
  name = "covar",
  srcs = ["covar.cpp"],
  copts= ["-fopenmp",
          "-std=c++14"],
  deps = [
      "//kern_interp:ki_mat",
      "//kern_interp/skel_factorization",
      "//kern_interp/quadtree",
      "//kern_interp/boundaries",
      "//kern_interp:linear_solve",
      ],
 linkopts = ["-llapacke",
        "-llapack",
        "-lblas",
        "-lgomp"]

)



cc_binary(
  name = "linalg_acc",
  srcs = ["linalg_acc.cpp"],
  copts= ["-fopenmp",
          "-std=c++14"],
  deps = [
      "//kern_interp:ki_mat",
      "//kern_interp/skel_factorization",
      "//kern_interp/quadtree",
      "//kern_interp/boundaries",
      "//kern_interp:linear_solve",
      ],
  linkopts = ["-llapacke",
        "-llapack",
        "-lblas",
        "-lgomp"]

)



cc_binary(
  name = "pde_acc",
  srcs = ["pde_acc.cpp"],
  copts= ["-fopenmp",
          "-std=c++14"],
  deps = [
      "//kern_interp:ki_mat",
      "//kern_interp/skel_factorization",
      "//kern_interp/quadtree",
      "//kern_interp/boundaries",
      "//kern_interp:linear_solve",
      ],
  linkopts = ["-llapacke",
        "-llapack",
        "-lblas",
        "-lgomp"]

)



cc_binary(
  name = "update_acc",
  srcs = ["update_acc.cpp"],
  copts= ["-fopenmp",
          "-std=c++14"],
  deps = [
      "//kern_interp:ki_mat",
      "//kern_interp/skel_factorization",
      "//kern_interp/quadtree",
      "//kern_interp/boundaries",
      "//kern_interp:linear_solve",
      ],
  linkopts = ["-llapacke",
        "-llapack",
        "-lblas",
        "-lgomp"]

)

